import{h as c,D as d,K as b,L as v,n as p,o as f,l as A,w as S,G as T,C as r,M as g}from"./D-V3dsbx.js";const he=c({__name:"Alert",props:{message:{type:String,required:!0}},emits:["close"],setup(e,{emit:n}){const t=e,a=n,{showAlert:o}=k();return d(()=>o(t.message,()=>a("close"))),(i,s)=>null}}),Se=c({__name:"BackButton",props:{visible:{type:Boolean,default:!0}},emits:["click"],setup(e,{emit:n}){const t=e,a=n,{showBackButton:o,onBackButtonClicked:i,hideBackButton:s}=Fe();return b(()=>t.visible,u=>{u?o():s()}),i(()=>a("click")),d(()=>t.visible&&o()),v(()=>s()),(u,B)=>null}}),Ce=c({__name:"BiometricManager",emits:["init"],setup(e,{emit:n}){const t=n,{initBiometric:a}=Ze();return d(()=>a(()=>t("init"))),(o,i)=>null}}),ye=c({__name:"ClosingConfirmation",setup(e){const{enableClosingConfirmation:n,disableClosingConfirmation:t}=tt();return d(()=>n()),v(()=>t()),(a,o)=>null}}),ke=c({__name:"Confirm",props:{message:{type:String,required:!0}},emits:["close"],setup(e,{emit:n}){const t=e,a=n,{showConfirm:o}=k();return d(()=>o(t.message,i=>a("close",i))),(i,s)=>null}}),we=c({__name:"ExpandedViewport",props:{force:{type:Boolean,default:!1}},setup(e){const n=e,{isFeatureSupported:t}=m(),{onViewportChanged:a,expand:o,isExpanded:i,isVerticalSwipesEnabled:s}=_t();return t("DisableVerticalSwipes")?b(()=>n.force,u=>{u&&!i.value&&o(),s.value=!u},{immediate:!0}):a(({isStateStable:u})=>{n.force&&u&&!i.value&&o()}),d(()=>o()),(u,B)=>null}}),Me=c({__name:"MainButton",props:{text:{type:String},color:{type:String},textColor:{type:String},visible:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},progress:{type:Boolean,default:!1}},emits:["click"],setup(e,{emit:n}){const t=e,a=n,{setMainButtonParams:o,onMainButtonClicked:i,hideMainButton:s,showMainButtonProgress:u,hideMainButtonProgress:B}=ct();return b(()=>t.text,l=>{o({text:l})}),b(()=>t.color,l=>{o({color:l})}),b(()=>t.textColor,l=>{o({text_color:l})}),b(()=>t.visible,l=>{o({is_visible:l})}),b(()=>t.disabled,l=>{o({is_active:!l})}),b(()=>t.progress,l=>{l?u():B()}),i(()=>a("click")),d(()=>{t.progress?u():B(),o({text:t.text,text_color:t.textColor,color:t.color,is_active:!t.disabled,is_visible:t.visible})}),v(()=>{B(),s()}),(l,Vt)=>null}}),Pe=c({__name:"Popup",props:{title:{type:String},message:{type:String,required:!0},buttons:{type:Array}},emits:["close"],setup(e,{emit:n}){const t=e,a=n,{showPopup:o}=k();return d(()=>o({title:t.title,message:t.message,buttons:t.buttons},i=>a("close",i))),(i,s)=>null}}),xe=c({__name:"ScanQr",props:{text:{type:String}},emits:["result"],setup(e,{emit:n}){const t=e,a=n,{showScanQrPopup:o,closeScanQrPopup:i}=vt();return d(()=>o({text:t.text},s=>a("result",s))),v(()=>i()),(s,u)=>null}}),_e=c({__name:"SettingsButton",props:{visible:{type:Boolean,default:!0}},emits:["click"],setup(e,{emit:n}){const t=e,a=n,{showSettingsButton:o,onSettingsButtonClicked:i,hideSettingsButton:s}=Mt();return b(()=>t.visible,u=>{u?o():s()}),i(()=>a("click")),d(()=>t.visible&&o()),v(()=>s()),(u,B)=>null}}),Ve=c({__name:"ShareWidget",props:{url:{type:String,required:!0},comment:{type:String,default:null},size:{type:String,default:null},noLabel:{type:Boolean,default:!1},tag:{type:String,default:"div"}},setup(e){const n=e,t=p(()=>JSON.stringify(n));return(a,o)=>(f(),A(T(e.tag),{key:t.value},{default:S(()=>[(f(),A(T("script"),{async:"",src:"https://telegram.org/js/telegram-widget.js?22","data-telegram-share-url":e.url,"data-size":e.size,"data-comment":e.comment,"data-text":e.noLabel?"notext":null},null,8,["data-telegram-share-url","data-size","data-comment","data-text"]))]),_:1}))}}),qe=c({__name:"PostWidget",props:{url:{type:String,required:!0},width:{type:String,default:null},authorPhoto:{type:Boolean,default:null},color:{type:String,default:null},darkColor:{type:String,default:null},dark:{type:Boolean,default:null},tag:{type:String,default:"div"}},setup(e){const n=e,t=p(()=>JSON.stringify(n));return(a,o)=>(f(),A(T(e.tag),{key:t.value},{default:S(()=>[(f(),A(T("script"),{async:"",src:"https://telegram.org/js/telegram-widget.js?22","data-telegram-post":e.url,"data-width":e.width,"data-userpic":e.authorPhoto,"data-color":e.color,"data-dark-color":e.darkColor,"data-dark":e.dark},null,8,["data-telegram-post","data-width","data-userpic","data-color","data-dark-color","data-dark"]))]),_:1}))}}),Ee=c({__name:"LoginWidget",props:{botUsername:{type:String,required:!0},redirectUrl:{type:String,default:null},size:{type:String,default:null},cornerRadius:{type:String,default:null},userPhoto:{type:Boolean,default:null},requestWrite:{type:Boolean,default:!1},tag:{type:String,default:"div"}},emits:["auth"],setup(e,{emit:n}){const t=e,a=p(()=>JSON.stringify(t)),o=n;return d(()=>{window.onTelegramAuth=i=>o("auth",i)}),(i,s)=>(f(),A(T(e.tag),{key:a.value},{default:S(()=>[(f(),A(T("script"),{async:"",src:"https://telegram.org/js/telegram-widget.js?22","data-telegram-login":e.botUsername,"data-size":e.size,"data-radius":e.cornerRadius,"data-userpic":e.userPhoto,"data-request-access":e.requestWrite?"write":null,"data-onauth":e.redirectUrl?null:"onTelegramAuth(user)","data-auth-url":e.redirectUrl},null,8,["data-telegram-login","data-size","data-radius","data-userpic","data-request-access","data-onauth","data-auth-url"]))]),_:1}))}}),De=c({__name:"DiscussionWidget",props:{url:{type:String,required:!0},commentsLimit:{type:Number,default:null},height:{type:String,default:null},color:{type:String,default:null},darkColor:{type:String,default:null},dark:{type:Boolean,default:null},colorful:{type:Boolean,default:null},tag:{type:String,default:"div"}},setup(e){const n=e,t=p(()=>JSON.stringify(n));return(a,o)=>(f(),A(T(e.tag),{key:t.value},{default:S(()=>[(f(),A(T("script"),{async:"",src:"https://telegram.org/js/telegram-widget.js?22","data-telegram-discussion":e.url,"data-comments-limit":e.commentsLimit,"data-height":e.height,"data-color":e.color,"data-dark-color":e.darkColor,"data-dark":e.dark,"data-colorful":e.colorful},null,8,["data-telegram-discussion","data-comments-limit","data-height","data-color","data-dark-color","data-dark","data-colorful"]))]),_:1}))}}),{initData:Ie,initDataUnsafe:Re,version:Le,platform:Qe,isVersionAtLeast:N,sendData:Ue,close:He}=Telegram.WebApp,F=r(!1),Oe=(...e)=>{Telegram.WebApp.ready(...e),F.value=!0},J=e=>Telegram.WebApp.platform===e,G=J("unknown"),ze={ClosingConfirmation:"6.2",CloudStorage:"6.9",RequestWriteAccess:"6.9",RequestContact:"6.9",SettingsButton:"7.0",BiometricManager:"7.2",DisableVerticalSwipes:"7.7"},je=e=>N(ze[e]),Ne=!G&&Telegram.WebApp.initData==="";function m(){return{initData:Ie,initDataUnsafe:Re,version:Le,platform:Qe,isVersionAtLeast:N,onEvent:(e,n,t={manual:!1})=>{const{manual:a}=t,o=()=>{Telegram.WebApp.onEvent(e,n)},i=()=>{Telegram.WebApp.offEvent(e,n)};return a?o():(d(o),v(i)),{off:i}},sendData:Ue,ready:Oe,close:He,isReady:g(F),isPlatform:J,isPlatformUnknown:G,isFeatureSupported:je,canSendData:Ne}}const K=r(Telegram.WebApp.BackButton.isVisible);function $(){K.value=Telegram.WebApp.BackButton.isVisible}function M(...e){Telegram.WebApp.BackButton.show(...e),$()}function P(...e){Telegram.WebApp.BackButton.hide(...e),$()}function Fe(){const{onEvent:e}=m(),n=(t,a)=>e("backButtonClicked",t,a);return{isBackButtonVisible:p({get(){return K.value},set(t){t?M():P()}}),onBackButtonClicked:n,showBackButton:M,hideBackButton:P}}const{init:Je,requestAccess:Ge,authenticate:Ke,updateBiometricToken:$e,openSettings:Xe}=Telegram.WebApp.BiometricManager,X=r(Telegram.WebApp.BiometricManager.isInited),Y=r(Telegram.WebApp.BiometricManager.isBiometricAvailable),Z=r(Telegram.WebApp.BiometricManager.biometricType),ee=r(Telegram.WebApp.BiometricManager.isAccessRequested),te=r(Telegram.WebApp.BiometricManager.isAccessGranted),ne=r(Telegram.WebApp.BiometricManager.isAccessGranted),ae=r(Telegram.WebApp.BiometricManager.deviceId);function Ye(){X.value=Telegram.WebApp.BiometricManager.isInited,Y.value=Telegram.WebApp.BiometricManager.isBiometricAvailable,Z.value=Telegram.WebApp.BiometricManager.biometricType,ee.value=Telegram.WebApp.BiometricManager.isAccessRequested,te.value=Telegram.WebApp.BiometricManager.isAccessGranted,ae.value=Telegram.WebApp.BiometricManager.deviceId,ne.value=Telegram.WebApp.BiometricManager.isBiometricTokenSaved}function Ze(){const{onEvent:e}=m(),n=(o,i)=>e("biometricManagerUpdated",o,i),t=(o,i)=>e("biometricAuthRequested",o,i),a=(o,i)=>e("biometricTokenUpdated",o,i);return n(Ye),{isBiometricInited:g(X),isBiometricAvailable:g(Y),biometricType:g(Z),isBiometricAccessRequested:g(ee),isBiometricAccessGranted:g(te),isBiometricTokenSaved:g(ne),biometricDeviceId:g(ae),initBiometric:Je,requestBiometricAccess:Ge,authenticateBiometric:Ke,updateBiometricToken:$e,openBiometricSettings:Xe,onBiometricManagerUpdated:n,onBiometricAuthRequested:t,onBiometricTokenUpdated:a}}const{readTextFromClipboard:et}=Telegram.WebApp;function Et(){const{onEvent:e}=m();return{readTextFromClipboard:et,onClipboardTextReceived:(n,t)=>e("clipboardTextReceived",n,t)}}const oe=r(Telegram.WebApp.isClosingConfirmationEnabled);function ie(){oe.value=Telegram.WebApp.isClosingConfirmationEnabled}function x(...e){Telegram.WebApp.enableClosingConfirmation(...e),ie()}function _(...e){Telegram.WebApp.disableClosingConfirmation(...e),ie()}function tt(){return{isClosingConfirmationEnabled:p({get(){return oe.value},set(e){e?x():_()}}),enableClosingConfirmation:x,disableClosingConfirmation:_}}const h=Telegram.WebApp.CloudStorage;function nt(e,n){return new Promise((t,a)=>{h.setItem(e,n,(o,i)=>{o&&a(o),t(i)})})}function at(e){return new Promise((n,t)=>{h.getItem(e,(a,o)=>{a&&t(a),n(o)})})}function ot(e){return new Promise((n,t)=>{h.getItems(e,(a,o)=>{a&&t(a),n(o)})})}function it(e){return new Promise((n,t)=>{h.removeItem(e,(a,o)=>{a&&t(a),n(o)})})}function rt(e){return new Promise((n,t)=>{h.removeItems(e,(a,o)=>{a&&t(a),n(o)})})}function st(){return new Promise((e,n)=>{h.getKeys((t,a)=>{t&&n(t),e(a)})})}function Dt(){return{setStorageItem:nt,getStorageItem:at,getStorageItems:ot,removeStorageItem:it,removeStorageItems:rt,getStorageKeys:st}}const{impactOccurred:lt,notificationOccurred:ut,selectionChanged:pt}=Telegram.WebApp.HapticFeedback;function It(){return{impactOccurred:lt,notificationOccurred:ut,selectionChanged:pt}}const re=r(Telegram.WebApp.MainButton.text),se=r(Telegram.WebApp.MainButton.color),le=r(Telegram.WebApp.MainButton.textColor),ue=r(Telegram.WebApp.MainButton.isVisible),pe=r(Telegram.WebApp.MainButton.isActive),ce=r(Telegram.WebApp.MainButton.isProgressVisible);function W(){re.value=Telegram.WebApp.MainButton.text,se.value=Telegram.WebApp.MainButton.color,le.value=Telegram.WebApp.MainButton.textColor,ue.value=Telegram.WebApp.MainButton.isVisible,pe.value=Telegram.WebApp.MainButton.isActive,ce.value=Telegram.WebApp.MainButton.isProgressVisible}function V(...e){Telegram.WebApp.MainButton.setText(...e),W()}function q(...e){Telegram.WebApp.MainButton.show(...e),W()}function E(...e){Telegram.WebApp.MainButton.hide(...e),W()}function D(...e){Telegram.WebApp.MainButton.enable(...e),W()}function I(...e){Telegram.WebApp.MainButton.disable(...e),W()}function R(...e){Telegram.WebApp.MainButton.showProgress(...e),W()}function L(...e){Telegram.WebApp.MainButton.hideProgress(...e),W()}function y(...e){Telegram.WebApp.MainButton.setParams(...e),W()}function ct(){const{onEvent:e}=m(),n=(t,a)=>e("mainButtonClicked",t,a);return{mainButtonText:p({get(){return re.value},set(t){V(t)}}),mainButtonColor:p({get(){return se.value},set(t){y({color:t})}}),mainButtonTextColor:p({get(){return le.value},set(t){y({text_color:t})}}),isMainButtonVisible:p({get(){return ue.value},set(t){t?q():E()}}),isMainButtonActive:p({get(){return pe.value},set(t){t?D():I()}}),isMainButtonProgressVisible:p({get(){return ce.value},set(t){t?R():L()}}),setMainButtonText:V,onMainButtonClicked:n,showMainButton:q,hideMainButton:E,enableMainButton:D,disableMainButton:I,showMainButtonProgress:R,hideMainButtonProgress:L,setMainButtonParams:y}}const{switchInlineQuery:gt,openLink:mt,openTelegramLink:dt,openInvoice:bt}=Telegram.WebApp;function Rt(){const{onEvent:e}=m();return{switchInlineQuery:gt,openLink:mt,openTelegramLink:dt,openInvoice:bt,onInvoiceClosed:(n,t)=>e("invoiceClosed",n,t)}}const{showPopup:Bt,showAlert:ft,showConfirm:At}=Telegram.WebApp;function k(){const{onEvent:e}=m();return{showPopup:Bt,showAlert:ft,showConfirm:At,onPopupClosed:(n,t)=>e("popupClosed",n,t)}}const{showScanQrPopup:Tt,closeScanQrPopup:Wt}=Telegram.WebApp;function vt(){const{onEvent:e}=m();return{showScanQrPopup:Tt,closeScanQrPopup:Wt,onQrTextReceived:(n,t)=>e("qrTextReceived",n,t),onScanQrPopupClosed:(n,t)=>e("scanQrPopupClosed",n,t)}}const{requestContact:ht,requestWriteAccess:St}=Telegram.WebApp;function Lt(){const{onEvent:e}=m();return{requestContact:ht,onContactRequested:(n,t)=>e("contactRequested",n,t),requestWriteAccess:St,onWriteAccessRequested:(n,t)=>e("writeAccessRequested",n,t)}}const{initData:Ct,initDataUnsafe:yt,sendData:kt,close:wt}=m();function Qt(e,n){const t=n.serialize??JSON.stringify,a=r(""),o=s=>{a.value=s,console.error(s)},i=r(!1);return{error:a,isLoading:i,execute:()=>{kt(t(e)),setTimeout(()=>o("Telegram.WebApp.sendData is only available for custom keyboards."),1e3)},executeHttp:async(s,u={})=>{const B=u.closeAfter??!0;i.value=!0;try{const l=await fetch(s,{method:"POST",body:JSON.stringify({initData:Ct,initDataUnsafe:yt,data:t(e)})});return l.ok||o(`${l.status} ${l.statusText}`),l.ok&&B&&wt(),l}catch(l){o(String(l))}finally{i.value=!1}}}}const ge=r(Telegram.WebApp.SettingsButton.isVisible);function me(){ge.value=Telegram.WebApp.SettingsButton.isVisible}function Q(...e){Telegram.WebApp.SettingsButton.show(...e),me()}function U(...e){Telegram.WebApp.SettingsButton.hide(...e),me()}function Mt(){const{onEvent:e}=m(),n=(t,a)=>e("settingsButtonClicked",t,a);return{isSettingsButtonVisible:p({get(){return ge.value},set(t){t?Q():U()}}),onSettingsButtonClicked:n,showSettingsButton:Q,hideSettingsButton:U}}function Pt(e,n){Telegram.WebApp.shareToStory(e,n)}function Ut(){return{shareToStory:Pt}}const de=r(Telegram.WebApp.colorScheme),be=r(Telegram.WebApp.themeParams),Be=r(Telegram.WebApp.headerColor),fe=r(Telegram.WebApp.backgroundColor);function w(){de.value=Telegram.WebApp.colorScheme,be.value={...Telegram.WebApp.themeParams},Be.value=Telegram.WebApp.headerColor,fe.value=Telegram.WebApp.backgroundColor}function H(...e){Telegram.WebApp.setHeaderColor(...e),w()}function O(...e){Telegram.WebApp.setBackgroundColor(...e),w()}function Ht(){const{onEvent:e}=m(),n=(t,a)=>e("themeChanged",t,a);return n(w),{colorScheme:g(de),themeParams:g(be),headerColor:p({get(){return Be.value},set(t){H(t)}}),backgroundColor:p({get(){return fe.value},set(t){O(t)}}),setHeaderColor:H,setBackgroundColor:O,onThemeChanged:n}}const Ae=r(Telegram.WebApp.isExpanded),Te=r(Telegram.WebApp.viewportHeight),We=r(Telegram.WebApp.viewportStableHeight),ve=r(Telegram.WebApp.isVerticalSwipesEnabled);function C(){Ae.value=Telegram.WebApp.isExpanded,Te.value=Telegram.WebApp.viewportHeight,We.value=Telegram.WebApp.viewportStableHeight,ve.value=Telegram.WebApp.isVerticalSwipesEnabled}function xt(...e){Telegram.WebApp.expand(...e),C()}const z=(...e)=>{Telegram.WebApp.enableVerticalSwipes(...e),C()},j=(...e)=>{Telegram.WebApp.disableVerticalSwipes(...e),C()};function _t(){const{onEvent:e}=m(),n=(t,a)=>e("viewportChanged",t,a);return n(C),{isExpanded:g(Ae),viewportHeight:g(Te),viewportStableHeight:g(We),expand:xt,onViewportChanged:n,isVerticalSwipesEnabled:p({get(){return ve.value},set(t){t?z():j()}}),enableVerticalSwipes:z,disableVerticalSwipes:j}}const Ot={install(e){e.component("TgAlert",he),e.component("TgBackButton",Se),e.component("TgBiometricManager",Ce),e.component("TgClosingConfirmation",ye),e.component("TgConfirm",ke),e.component("TgExpandedViewport",we),e.component("TgMainButton",Me),e.component("TgPopup",Pe),e.component("TgScanQr",xe),e.component("TgSettingsButton",_e),e.component("TgShareWidget",Ve),e.component("TgPostWidget",qe),e.component("TgLoginWidget",Ee),e.component("TgDiscussionWidget",De)}};export{he as Alert,Se as BackButton,Ce as BiometricManager,ye as ClosingConfirmation,ke as Confirm,De as DiscussionWidget,we as ExpandedViewport,Ee as LoginWidget,Me as MainButton,Pe as Popup,qe as PostWidget,xe as ScanQr,_e as SettingsButton,Ve as ShareWidget,Ot as VueTelegramPlugin,m as useWebApp,Fe as useWebAppBackButton,Ze as useWebAppBiometricManager,Et as useWebAppClipboard,tt as useWebAppClosingConfirmation,Dt as useWebAppCloudStorage,It as useWebAppHapticFeedback,ct as useWebAppMainButton,Rt as useWebAppNavigation,k as useWebAppPopup,vt as useWebAppQrScanner,Lt as useWebAppRequests,Qt as useWebAppSendData,Mt as useWebAppSettingsButton,Ut as useWebAppShare,Ht as useWebAppTheme,_t as useWebAppViewport};
